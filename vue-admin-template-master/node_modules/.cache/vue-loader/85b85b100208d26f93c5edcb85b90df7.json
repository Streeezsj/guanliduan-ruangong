{"remainingRequest":"D:\\vue管理端\\软件工程\\vue-admin-template-master\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\vue管理端\\软件工程\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue管理端\\软件工程\\vue-admin-template-master\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue管理端\\软件工程\\vue-admin-template-master\\src\\views\\Reseach\\itemList.vue?vue&type=template&id=d48ada8e&","dependencies":[{"path":"D:\\vue管理端\\软件工程\\vue-admin-template-master\\src\\views\\Reseach\\itemList.vue","mtime":1654859992091},{"path":"D:\\vue管理端\\软件工程\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue管理端\\软件工程\\vue-admin-template-master\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\vue管理端\\软件工程\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue管理端\\软件工程\\vue-admin-template-master\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}